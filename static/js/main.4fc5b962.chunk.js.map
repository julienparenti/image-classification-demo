{"version":3,"sources":["OutlinedDiv.js","App.js","reportWebVitals.js","index.js"],"names":["InputComponent","inputRef","other","OutlinedDiv","children","label","TextField","variant","multiline","InputLabelProps","shrink","InputProps","inputComponent","inputProps","App","classes","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","useStyles","useState","picUrl","setPicUrl","picCategory","setPicCategory","requestSagemakerAPI","base64","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","console","log","status","responseText","result","send","AppBar","position","Toolbar","className","Typography","Grid","container","style","height","padding","justify","item","xs","display","alignItems","flexDirection","id","onChange","e","target","value","defaultValue","width","src","Button","onClick","imageToBase64","then","response","categoriesArray","Math","floor","random","length","catch","error","convertImageToBase64","background","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4VAIMA,EAAiB,SAAC,GAAD,EAAGC,SAAH,IAAgBC,EAAhB,mCAA4B,mCAASA,KAe7CC,EAdK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC/B,OACE,cAACC,EAAA,EAAD,CACEC,QAAQ,WACRF,MAAOA,EACPG,WAAS,EACTC,gBAAiB,CAAEC,QAAQ,GAC3BC,WAAY,CACVC,eAAgBZ,GAElBa,WAAY,CAAET,SAAUA,MCsIfU,MArIf,WAGI,IAWMC,EAXYC,aAAW,SAACC,GAAD,MAAY,CACtCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,MAGCK,GAdL,EAiBiBC,mBAAS,IAjB1B,mBAiBJC,EAjBI,KAiBIC,EAjBJ,OAkB2BF,mBAAS,IAlBpC,mBAkBJG,EAlBI,KAkBSC,EAlBT,KA6CLC,EAAqB,SAACC,GACxB,IACMC,EAAM,IAAIC,eAChBD,EAAIE,KAAK,OAFa,6GAGtBF,EAAIG,iBAAiB,eAAgB,cACrCH,EAAIG,iBAAiB,8BAA+B,KACpDH,EAAIG,iBAAiB,+BAAgC,0CACrDH,EAAIG,iBAAiB,+BAAgC,sCAErDH,EAAII,mBAAqB,WACE,IAAnBJ,EAAIK,aACJC,QAAQC,IAAIP,EAAIQ,QAChBF,QAAQC,IAAIP,EAAIS,gBAGxB,IAAMC,EAASV,EAAIW,KAAKZ,GACxBO,QAAQC,IAAI,cAAeG,IAIjC,OAEG,qCACE,cAACE,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACC,cAACC,EAAA,EAAD,CAASC,UAAU,YAAnB,SACE,cAACC,EAAA,EAAD,CAAYzC,QAAQ,KAAKwC,UAAWhC,EAAQQ,MAA5C,mDAMD,eAAC0B,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAO,CAACC,OAAO,OAAQC,QAAQ,IAAKC,QAAQ,SAA5D,UAEH,eAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIL,MAAO,CAACM,QAAQ,OAAOC,WAAW,SAAUC,cAAc,UAA7E,UACA,cAACrD,EAAA,EAAD,CACIsD,GAAG,2BACHvD,MAAM,+BACNwD,SAAU,SAACC,GAAD,OAAMnC,EAAUmC,EAAEC,OAAOC,QACnCC,aAAa,GACbD,MAAOtC,EACPnB,QAAQ,WACR4C,MAAO,CAACe,MAAM,WAEhB,uBACA,uBACY,KAAXxC,EACD,cAAC,EAAD,CAAarB,MAAM,eAAnB,SACA,qBACI8D,IAAKzC,MAGT,gCAIF,eAACuB,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAK,EAAGL,MAAO,CAACM,QAAQ,OAAQC,WAAW,SAAUC,cAAc,UAA9E,UACgB,KAAXjC,EACG,gCACI,uBACA,uBACA,cAAC0C,EAAA,EAAD,CAAQjB,MAAO,CAACe,MAAM,OAAQd,OAAO,OAAQ7C,QAAS,WAAW8D,QAAS,kBApF5D,SAAC3C,GACzBY,QAAQC,IAAI,gBAAiBb,GAC7B4C,IAAc5C,GACjB6C,MACG,SAACC,GACGlC,QAAQC,IAAI,oBAAqBiC,GAEjC,IAAMC,EAAkB,CAAC,UACrB,UAEE7C,EAAc6C,EADCC,KAAKC,MAAMD,KAAKE,SAAWH,EAAgBI,SAEhEvC,QAAQC,IAAI,oBAAqBX,GACjCC,EAAeD,GAEfE,EAAoB0C,MAG3BM,OACG,SAACC,GACGzC,QAAQC,IAAIwC,MAiEwEC,CAAqBtD,IAAnG,gCAEV,6BACF,0BAIA,eAACuB,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAK,EAAGL,MAAO,CAACM,QAAQ,OAAQC,WAAW,SAAUC,cAAc,UAA9E,UACqB,KAAhB/B,EACG,gCACI,uBACA,uBACA,cAACwC,EAAA,EAAD,CAAQjB,MAAO,CAACe,MAAM,OAAQd,OAAO,MAAO6B,WAAW,UAAWC,MAAM,WAAY3E,QAAS,WAA7F,SAAyGqB,OAEnH,6BACF,iCC5HSuD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4fc5b962.chunk.js","sourcesContent":["import React from \"react\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nconst InputComponent = ({ inputRef, ...other }) => <div {...other} />;\nconst OutlinedDiv = ({ children, label }) => {\n  return (\n    <TextField\n      variant=\"outlined\"\n      label={label}\n      multiline\n      InputLabelProps={{ shrink: true }}\n      InputProps={{\n        inputComponent: InputComponent\n      }}\n      inputProps={{ children: children }}\n    />\n  );\n};\nexport default OutlinedDiv;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport {\n    TextField,\n    Grid,\n    AppBar,\n    Toolbar,\n    Typography,\n    IconButton,\n    Button, Avatar\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport imageToBase64 from 'image-to-base64/browser';\nimport OutlinedDiv from \"./OutlinedDiv\";\n\n\nfunction App() {\n\n    // Styles settings\n    const useStyles = makeStyles((theme) => ({\n       root: {\n         flexGrow: 1,\n       },\n       menuButton: {\n         marginRight: theme.spacing(2),\n       },\n       title: {\n         flexGrow: 1,\n       },\n     }));\n    const classes = useStyles();\n\n    // Params\n    const [picUrl, setPicUrl] = useState(\"\");\n    const [picCategory, setPicCategory] = useState(\"\");\n\n    // Functions\n    const convertImageToBase64 =(picUrl) => {\n        console.log('Picture URL :', picUrl)\n        imageToBase64(picUrl) // Image URL\n    .then(\n        (response) => {\n            console.log('Image in Base64 :', response)\n            // TO DROP when we have the API\n            const categoriesArray = ['profile',\n                'office'];\n            const randomNumber = Math.floor(Math.random() * categoriesArray.length);\n            const picCategory = categoriesArray[randomNumber];\n            console.log('Random category :', picCategory);\n            setPicCategory(picCategory);\n            // API test\n            requestSagemakerAPI(response)\n        }\n    )\n    .catch(\n        (error) => {\n            console.log(error)\n        }\n    )\n    }\n\n    const requestSagemakerAPI =(base64) => {\n        const sagemaker_url = \"https://cors-anywhere.herokuapp.com/https://363xyhbjri.execute-api.eu-central-1.amazonaws.com/dev/predict\";\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", sagemaker_url);\n        xhr.setRequestHeader(\"Content-Type\", \"text/plain\");\n        xhr.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\n        xhr.setRequestHeader(\"Access-Control-Allow-Methods\", \"GET, POST, PATCH, PUT, DELETE, OPTIONS\");\n        xhr.setRequestHeader(\"Access-Control-Allow-Headers\", \"Origin, Content-Type, X-Auth-Token\");\n\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4) {\n                console.log(xhr.status);\n                console.log(xhr.responseText);\n            }};\n\n        const result = xhr.send(base64);\n        console.log('Request API', result);\n    }\n\n\n  return (\n\n     <>\n       <AppBar position=\"static\">\n        <Toolbar className='myToolbar'>\n          <Typography variant=\"h6\" className={classes.title}>\n            Demo - Image Categorization Model\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n         <Grid container style={{height:\"90vh\", padding:50}} justify=\"center\">\n\n      <Grid item xs={12} style={{display:\"flex\",alignItems:\"center\", flexDirection:\"column\"}}>\n      <TextField\n          id=\"standard-read-only-input\"\n          label=\"Enter the picture's url here\"\n          onChange={(e)=> setPicUrl(e.target.value)}\n          defaultValue=\"\"\n          value={picUrl}\n          variant=\"outlined\"\n          style={{width:\"100vh\"}}\n        />\n        <br/>\n        <br/>\n        {picUrl !== \"\" ?\n        <OutlinedDiv label=\"Your picture\">\n        <img\n            src={picUrl}\n        />\n        </OutlinedDiv>\n      : <></>}\n\n      </Grid>\n\n      <Grid item xs ={3} style={{display:\"flex\", alignItems:\"center\", flexDirection:'column'}}>\n          {picUrl !== \"\" ?\n              <div>\n                  <br />\n                  <br />\n                  <Button style={{width:\"20vh\", height:\"5vh\"}} variant= \"outlined\" onClick={()=>convertImageToBase64(picUrl)}>Detect category</Button>\n              </div>\n      : <></>}\n      <br/>\n\n      </Grid>\n\n      <Grid item xs ={3} style={{display:\"flex\", alignItems:\"center\", flexDirection:'column'}}>\n          {picCategory !== \"\" ?\n              <div>\n                  <br />\n                  <br />\n                  <Button style={{width:\"20vh\", height:\"5vh\", background:\"#16a085\", color:\"#FFFFFF\"}} variant= \"outlined\">{picCategory}</Button>\n              </div>\n      : <></>}\n      <br/>\n\n      </Grid>\n\n\n         </Grid>\n\n     </>\n\n  );\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}